platform :ios, '13.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Add a script phase to create missing privacy bundle files
  script_phase :name => 'Fix Privacy Bundles',
               :script => '
                 # Handle both Debug and Release configurations
                 if [ "$CONFIGURATION" = "Debug" ]; then
                   BUILD_DIR="${TARGET_BUILD_DIR}/../.."
                 else
                   BUILD_DIR="${TARGET_BUILD_DIR}/../.."
                 fi
                 
                 # Create shared_preferences_foundation privacy bundle
                 SHARED_PREFS_DIR="$BUILD_DIR/shared_preferences_foundation/shared_preferences_foundation_privacy.bundle"
                 mkdir -p "$SHARED_PREFS_DIR"
                 touch "$SHARED_PREFS_DIR/shared_preferences_foundation_privacy"
                 
                 # Create path_provider_foundation privacy bundle
                 PATH_PROVIDER_DIR="$BUILD_DIR/path_provider_foundation/path_provider_foundation_privacy.bundle"
                 mkdir -p "$PATH_PROVIDER_DIR"
                 touch "$PATH_PROVIDER_DIR/path_provider_foundation_privacy"
                 
                 # Create permission_handler_apple privacy bundle
                 PERMISSION_DIR="$BUILD_DIR/permission_handler_apple/permission_handler_apple_privacy.bundle"
                 mkdir -p "$PERMISSION_DIR"
                 touch "$PERMISSION_DIR/permission_handler_apple_privacy"
                 
                 # Create camera_avfoundation privacy bundle
                 CAMERA_DIR="$BUILD_DIR/camera_avfoundation/camera_avfoundation_privacy.bundle"
                 mkdir -p "$CAMERA_DIR"
                 touch "$CAMERA_DIR/camera_avfoundation_privacy"
               ',
               :execution_position => :before_compile
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Camera permissions
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',
      ]
      
      # Essential for plugin registration
      config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
      config.build_settings['OTHER_LDFLAGS'] << '-ObjC'
      
      # Swift libraries
      config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = 'YES'
      
      # Fix for privacy bundle issues
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['DEFINES_MODULE'] = 'YES'
      
      # Disable privacy manifest validation as a workaround
      config.build_settings['VALIDATE_PRIVACY_MANIFEST'] = 'NO'
      
      # Camera plugin specific fixes
      if target.name == 'camera_avfoundation'
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['ENABLE_STRICT_OBJC_MSGSEND'] = 'NO'
      end
    end
    
    # Workaround for privacy bundle issues
    if target.name == 'shared_preferences_foundation' || target.name == 'path_provider_foundation'
      target.build_phases.each do |build_phase|
        if build_phase.class.name == 'Xcodeproj::Project::Object::PBXCopyFilesBuildPhase'
          build_phase.files.reject! { |file| file.display_name.include?('privacy') }
        end
      end
    end
  end
end
